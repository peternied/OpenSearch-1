name: Increment Version

on:
  workflow_dispatch:
  push:
    tags:
      - '*.*.*'

permissions: {}
jobs:
  build:
    env:
      VERSION_FILE: /libs/core/src/main/java/org/opensearch/Version.java
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Fetch Tag and Version Information
        run: |
          TAG=$(echo "${GITHUB_REF#refs/*/}")
          CURRENT_VERSION_ARRAY=($(echo "$TAG" | tr . '\n'))
          BASE=$(IFS=. ; echo "${CURRENT_VERSION_ARRAY[*]:0:2}")
          BASE_X=$(IFS=. ; echo "${CURRENT_VERSION_ARRAY[*]:0:1}.x")
          CURRENT_VERSION=$(IFS=. ; echo "${CURRENT_VERSION_ARRAY[*]:0:3}")
          CURRENT_VERSION_UNDERSCORE=$(IFS=_ ; echo "V_${CURRENT_VERSION_ARRAY[*]:0:3}")
          CURRENT_VERSION_ARRAY[2]=$((CURRENT_VERSION_ARRAY[2]+1))
          NEXT_VERSION=$(IFS=. ; echo "${CURRENT_VERSION_ARRAY[*]:0:3}")
          NEXT_VERSION_UNDERSCORE=$(IFS=_ ; echo "V_${CURRENT_VERSION_ARRAY[*]:0:3}")
          NEXT_VERSION_ID=$(IFS=0 ; echo "${CURRENT_VERSION_ARRAY[*]:0:3}99")
          echo "TAG=$TAG" >> $GITHUB_ENV
          echo "BASE=$BASE" >> $GITHUB_ENV
          echo "BASE_X=$BASE_X" >> $GITHUB_ENV
          echo "CURRENT_VERSION=$CURRENT_VERSION" >> $GITHUB_ENV
          echo "CURRENT_VERSION_UNDERSCORE=$CURRENT_VERSION_UNDERSCORE" >> $GITHUB_ENV
          echo "NEXT_VERSION=$NEXT_VERSION" >> $GITHUB_ENV
          echo "NEXT_VERSION_UNDERSCORE=$NEXT_VERSION_UNDERSCORE" >> $GITHUB_ENV
          echo "NEXT_VERSION_ID=$NEXT_VERSION_ID" >> $GITHUB_ENV
      - uses: actions/checkout@v2
        with:
          ref: ${{ env.BASE }}

      - name: Increment Patch Version
        run: |
          echo Incrementing $CURRENT_VERSION to $NEXT_VERSION
          echo "  - \"$CURRENT_VERSION\"" >> .ci/bwcVersions
          sed -i "s/opensearch        = $CURRENT_VERSION/opensearch        = $NEXT_VERSION/g" buildSrc/version.properties
          echo Adding $NEXT_VERSION_UNDERSCORE after $CURRENT_VERSION_UNDERSCORE
          sed -i "s/public static final Version $CURRENT_VERSION_UNDERSCORE = new Version(\([[:digit:]]\+\)\(.*\));/\0\n    public static final Version $NEXT_VERSION_UNDERSCORE = new Version($NEXT_VERSION_ID\2);/g" ${{ VERSION_FILE }}
          sed -i "s/CURRENT = $CURRENT_VERSION_UNDERSCORE;/CURRENT = $NEXT_VERSION_UNDERSCORE;/g" server/src/main/java/org/opensearch/Version.java

      - run: git diff
      - run: git checkout .

      - uses: actions/checkout@v2
        with:
          ref: ${{ env.BASE_X }}

      - name: Add bwc version to .X branch
        run: |
          echo Adding bwc version $NEXT_VERSION after $CURRENT_VERSION
          sed -i "s/- \"$CURRENT_VERSION\"/\0\n  - \"$NEXT_VERSION\"/g" .ci/bwcVersions
          echo Adding $NEXT_VERSION_UNDERSCORE after $CURRENT_VERSION_UNDERSCORE
          sed -i "s/public static final Version $CURRENT_VERSION_UNDERSCORE = new Version(\([[:digit:]]\+\)\(.*\));/\0\n    public static final Version $NEXT_VERSION_UNDERSCORE = new Version($NEXT_VERSION_ID\2);/g" server/src/main/java/org/opensearch/Version.java

      - run: git diff
      - run: git checkout .

      - uses: actions/checkout@v2
        with:
          ref: main

      - name: Add bwc version to main branch
        run: |
          echo Adding bwc version $NEXT_VERSION after $CURRENT_VERSION
          sed -i "s/- \"$CURRENT_VERSION\"/\0\n  - \"$NEXT_VERSION\"/g" .ci/bwcVersions
          echo Adding $NEXT_VERSION_UNDERSCORE after $CURRENT_VERSION_UNDERSCORE
          sed -i "s/public static final Version $CURRENT_VERSION_UNDERSCORE = new Version(\([[:digit:]]\+\)\(.*\));/\0\n    public static final Version $NEXT_VERSION_UNDERSCORE = new Version($NEXT_VERSION_ID\2);/g" libs/core/src/main/java/org/opensearch/Version.java

      - run: git diff
      - run: git checkout
